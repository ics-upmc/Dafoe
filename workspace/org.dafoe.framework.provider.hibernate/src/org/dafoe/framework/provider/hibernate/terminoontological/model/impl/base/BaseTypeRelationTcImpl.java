package org.dafoe.framework.provider.hibernate.terminoontological.model.impl.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the m22_type_relation_tc table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="m22_type_relation_tc"
 */
public abstract class BaseTypeRelationTcImpl  implements Serializable {

	public static String PROP_NAME = "Name";
	public static String PROP_PARENT = "Parent";
	public static String PROP_STATUS = "Status";
	public static String PROP_TERMINO_ONTOLOGY = "TerminoOntology";
	public static String PROP_ID = "Id";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.String _name;
	private java.lang.Integer _status;

	// many to one
	private org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TypeRelationTcImpl _parent;
	private org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TerminoOntologyImpl _terminoOntology;

	// collections
	private java.util.Set _annotations;
	private java.util.Set _children;
	private java.util.Set _tcRelation;
	private java.util.Set _mappedTermRelationTypes;
	private java.util.Set _mappedClasses;
	private java.util.Set _mappedDatatypeProperties;
	private java.util.Set _mappedObjectProperties;


	// constructors
	public BaseTypeRelationTcImpl () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseTypeRelationTcImpl (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="increment"
     *  column="id"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: name
	 */
	public java.lang.String getName () {
		return _name;
	}

	/**
	 * Set the value related to the column: name
	 * @param _name the name value
	 */
	public void setName (java.lang.String _name) {
		this._name = _name;
	}


	/**
	 * Return the value associated with the column: status
	 */
	public java.lang.Integer getStatus () {
		return _status;
	}

	/**
	 * Set the value related to the column: status
	 * @param _status the status value
	 */
	public void setStatus (java.lang.Integer _status) {
		this._status = _status;
	}


	/**
     * @hibernate.property
     *  column=parent_id
	 */
	public org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TypeRelationTcImpl getParent () {
		return this._parent;
	}

	/**
	 * Set the value related to the column: parent_id
	 * @param _parent the parent_id value
	 */
	public void setParent (org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TypeRelationTcImpl _parent) {
		this._parent = _parent;
	}


	/**
     * @hibernate.property
     *  column=termino_ontology_id
	 */
	public org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TerminoOntologyImpl getTerminoOntology () {
		return this._terminoOntology;
	}

	/**
	 * Set the value related to the column: termino_ontology_id
	 * @param _terminoOntology the termino_ontology_id value
	 */
	public void setTerminoOntology (org.dafoe.framework.provider.hibernate.terminoontological.model.impl.TerminoOntologyImpl _terminoOntology) {
		this._terminoOntology = _terminoOntology;
	}


	/**
	 * Return the value associated with the column: Annotations
	 */
	public java.util.Set getAnnotations () {
		return this._annotations;
	}

	/**
	 * Set the value related to the column: Annotations
	 * @param _annotations the Annotations value
	 */
	public void setAnnotations (java.util.Set _annotations) {
		this._annotations = _annotations;
	}
	
	public void addToAnnotations (Object obj) {
		if (null == this._annotations) this._annotations = new java.util.HashSet();
		this._annotations.add(obj);
	}



	/**
	 * Return the value associated with the column: Children
	 */
	public java.util.Set getChildren () {
		return this._children;
	}

	/**
	 * Set the value related to the column: Children
	 * @param _children the Children value
	 */
	public void setChildren (java.util.Set _children) {
		this._children = _children;
	}
	
	public void addToChildren (Object obj) {
		if (null == this._children) this._children = new java.util.HashSet();
		this._children.add(obj);
	}



	/**
	 * Return the value associated with the column: TcRelation
	 */
	public java.util.Set getTcRelation () {
		return this._tcRelation;
	}

	/**
	 * Set the value related to the column: TcRelation
	 * @param _tcRelation the TcRelation value
	 */
	public void setTcRelation (java.util.Set _tcRelation) {
		this._tcRelation = _tcRelation;
	}
	
	public void addToTcRelation (Object obj) {
		if (null == this._tcRelation) this._tcRelation = new java.util.HashSet();
		this._tcRelation.add(obj);
	}



	/**
	 * Return the value associated with the column: MappedTermRelationTypes
	 */
	public java.util.Set getMappedTermRelationTypes () {
		return this._mappedTermRelationTypes;
	}

	/**
	 * Set the value related to the column: MappedTermRelationTypes
	 * @param _mappedTermRelationTypes the MappedTermRelationTypes value
	 */
	public void setMappedTermRelationTypes (java.util.Set _mappedTermRelationTypes) {
		this._mappedTermRelationTypes = _mappedTermRelationTypes;
	}
	
	public void addToMappedTermRelationTypes (Object obj) {
		if (null == this._mappedTermRelationTypes) this._mappedTermRelationTypes = new java.util.HashSet();
		this._mappedTermRelationTypes.add(obj);
	}



	/**
	 * Return the value associated with the column: MappedClasses
	 */
	public java.util.Set getMappedClasses () {
		return this._mappedClasses;
	}

	/**
	 * Set the value related to the column: MappedClasses
	 * @param _mappedClasses the MappedClasses value
	 */
	public void setMappedClasses (java.util.Set _mappedClasses) {
		this._mappedClasses = _mappedClasses;
	}
	
	public void addToMappedClasses (Object obj) {
		if (null == this._mappedClasses) this._mappedClasses = new java.util.HashSet();
		this._mappedClasses.add(obj);
	}



	/**
	 * Return the value associated with the column: MappedDatatypeProperties
	 */
	public java.util.Set getMappedDatatypeProperties () {
		return this._mappedDatatypeProperties;
	}

	/**
	 * Set the value related to the column: MappedDatatypeProperties
	 * @param _mappedDatatypeProperties the MappedDatatypeProperties value
	 */
	public void setMappedDatatypeProperties (java.util.Set _mappedDatatypeProperties) {
		this._mappedDatatypeProperties = _mappedDatatypeProperties;
	}
	
	public void addToMappedDatatypeProperties (Object obj) {
		if (null == this._mappedDatatypeProperties) this._mappedDatatypeProperties = new java.util.HashSet();
		this._mappedDatatypeProperties.add(obj);
	}



	/**
	 * Return the value associated with the column: MappedObjectProperties
	 */
	public java.util.Set getMappedObjectProperties () {
		return this._mappedObjectProperties;
	}

	/**
	 * Set the value related to the column: MappedObjectProperties
	 * @param _mappedObjectProperties the MappedObjectProperties value
	 */
	public void setMappedObjectProperties (java.util.Set _mappedObjectProperties) {
		this._mappedObjectProperties = _mappedObjectProperties;
	}
	
	public void addToMappedObjectProperties (Object obj) {
		if (null == this._mappedObjectProperties) this._mappedObjectProperties = new java.util.HashSet();
		this._mappedObjectProperties.add(obj);
	}



	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof org.dafoe.framework.provider.hibernate.terminoontological.model.impl.base.BaseTypeRelationTcImpl)) return false;
		else {
			org.dafoe.framework.provider.hibernate.terminoontological.model.impl.base.BaseTypeRelationTcImpl mObj = (org.dafoe.framework.provider.hibernate.terminoontological.model.impl.base.BaseTypeRelationTcImpl) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}